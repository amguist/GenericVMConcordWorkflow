configuration:
  dependencies:
    - "mvn://com.walmartlabs.concord.plugins.basic:smtp-tasks:0.96.0"
    - "mvn://com.walmartlabs.concord.plugins.basic:ansimble-tasks:1.60.1"

  arguments:
    concordPid: ${txId}
    concordServerUrl: "http://localhost:8001/#/process"
    fromEmail: "hawkeyeOps@email.wal-mart.com"
    successEmail: "rhon.guist@gmail.com"
    errorEmail: "rhon.guist@gmail.com"

  meta:
    artifactId: ""
    version: ""
    completedStage: ""

flows:
  default:
    - try:
      - log: "Process ID is ${concordPid}"
      - form: deploymentForm
      - set:
          groupId: ${deploymentForm.groupId}
          artifactId: ${deploymentForm.artifactId}
          version: ${deploymentForm.version}
          environment: ${deploymentForm.environment}
      - switch: ${environment}
        Development:
          - form: developmentForm
          - set:
              serverUrl: ${developmentForm.serverAddress}
          - call: targetDeployment
            in: 
              targetEnv: ${environment}
              targetURL: ${serverUrl}
        default:
          - log: "Environment will be: ${environment}"
      - call: smtpSuccessFailure
        in:
          toEmail: ${successEmail}
          subject: "Install of ${artifactId}-${version} successfully complete."
          message: "This email has been generated by ${projectInfo.orgName}/${projectInfo.projectName} (${concordServerUrl}${txId}).  Install of ${artifactId}-${version} successfully complete."
    - error:
      - call: smtpSuccessFailure
        in: 
          toEmail: ${errorEmail}
          subject: "Error in Deployment"
          message: "This email has been generated by ${projectInfo.orgName}/${projectInfo.projectName} (${concordServerUrl}${txId}).  Install of ${artifactId}-${version} failed to complete."
      - throw: ${errMsg}
      
  targetDeployment:
    - if: ${targetURL != ""}
      then:
        - log: "************************************************************************************************"
        - log: "** Initiating Deployment Prerequisites to deploy to [ ${environment} ]                       ** "
        - log: "************************************************************************************************"
        - try:
          - if: ${targetEnv != "Production"}
            then:
              - log: "****************************************************************************"
              - log: "** Performing deployment to Non-Production Environment: [ ${targetEnv} ]  **"
              - log: "****************************************************************************"
              - call deployCheckpointNonProdEnv
            else:
              - log: "****************************************************************************"
              - log: "** Performing deployment to Production Environment: [ ${targetEnv} ]  **"
              - log: "****************************************************************************"
          error:
            - log: "Exception has been caught --- ${lastError.getCause()}"
            - throw: ${lastError.message}

  deployCheckpointNonProdEnv:
    - if: ${targetEnv == "Development"}
      then:
        - log: "Deployment set for Deploy_Dev"
      else:
        - log: "Invalid Environment"
      
      
  smtpSuccessFailure:
    - try:
      - task: smtp
        in:
          mail:
            from: ${fromEmail}
            to: ${toEmail}
            subject: ${subject}
            message: ${message}
      error:
        - log: "Error in sending success/failure emails."

forms:
  deploymentForm:
    - groupId: { label: "Group Identifier", type: "string", placeholder: "Input Artifact Group Identifier"}
    - artifactId: { label: "Artifact Identifier", type: "string", placeholder: "Input Artifact Group Identifier"}
    - version: { label: "Artifact Version", type: "string", placeholder: "Input Artifact Version"}
    - environment: { label: "Environment", type: "string", placeholder: "Select Environment Type", allow: ["Development","QA","Stage","Performance","Production"]}

  developmentForm:
    - serverAddress: { label: "Server Address", type: "string", placeholder: "Input Server Address(es)"}

